{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cloud Gaming API Documentation","text":"<p>Welcome to Cloud Gaming API documetation. It's still not have a stable release yet,  so the functionality may change in the future. </p>"},{"location":"#api-endpoint-references","title":"API Endpoint References","text":"<p>This is the documentation to all available (public and internal) endpoint the api provided. </p>"},{"location":"#architecture-references","title":"Architecture References","text":"<p>This is the documentation of the underlying architecture and codebase. </p>"},{"location":"#installation","title":"Installation","text":"<p>This is the documentation to locally install this api for testing. </p>"},{"location":"#milestones","title":"Milestones","text":"<p>List of features that are already added and going to be added in the future</p>"},{"location":"v1/architecture/","title":"Architecture","text":"<p>This API used <code>one database per service pattern</code>. The database used is combination of SQL and No - SQL. For SQL, it used PostgreSQL and NoSQL it used MongoDB. </p> <p></p>"},{"location":"v1/architecture/#service-details","title":"Service Details","text":""},{"location":"v1/architecture/#user","title":"User","text":"<p>This service handle <code>/v1/account</code> endpoint. This service deal with account related stuff</p>"},{"location":"v1/architecture/#games","title":"Games","text":"<p>This service handle <code>/v1/games</code> endpoint. This service handle user game collections</p>"},{"location":"v1/architecture/#auth","title":"Auth","text":"<p>This service handle <code>/v1/auth</code> endpoint. This service handle client authorization to access specific endpoint</p>"},{"location":"v1/architecture/#session","title":"Session","text":"<p>This service handle <code>/v1/session</code>endpoint. This service is a middleware between client and session manager.</p>"},{"location":"v1/architecture/#certificate-manager","title":"Certificate Manager","text":"<p>This service handle certificate distribution to all the service above for internal HTTPS communications and internal service authentication. </p>"},{"location":"v1/architecture/#session-manager","title":"Session Manager","text":"<p>This is the service that handle VM creation automation. </p>"},{"location":"v1/architecture/#database-schema","title":"Database Schema","text":""},{"location":"v1/architecture/#games_1","title":"Games","text":"<p>This the table schema of games service database. </p> <p>There are three tables; games, storage_location, and user_games_collections. games is a table that store all supported games. This table hold information on the name of the games, the game icon, and the display picture (icon but big), and storage_id which point to storage_location table. storage_location table give information on to retrieve game from the storage location. This information include the protocol, ip/host, port (if needed), and location or endpoint.</p>"},{"location":"v1/architecture/#session_1","title":"Session","text":"<p> In the session database, there are three tables, session, session_host, and session_metadata. Session is for storing the request status of the session. The status is of type ENUM called status. See the session details on endpoint for details regarding the possible value of the status.  The session id using UUIDv7 stored in bytes format.  </p> <p>In session_metadata table, there are data for storing extra information regarding the session. That include the creation time the username that create the session, and the game that are played</p> <p>session_host table store information regarding the VM that hosted the session. That include the address of the VM and the zero-tier networkid. </p>"},{"location":"v1/architecture/#flowchart","title":"Flowchart","text":""},{"location":"v1/architecture/#steam-link","title":"Steam Link","text":"<p>To be able to use the game service, first, the user need to link their steam account.  </p> <p>Upon accessing /v1/middleware/steam/{username}, the page will be redirected to the steam login page </p> <p>Upon successful login, the user will be redirected to the success_redirect that were assigned in the query parameter. If success_redirect query parameter is not set, then the middleware will use it's default success redirect. </p> <p>If any error occured during this process, the middleware will redirect user to fail_redirect that were also set in the query parameter. It will use default fail redirect when the query parameter is not set.  </p> <p>Default redirect only show a JSON message to the user, below is the example on default failure redirect</p> <p></p>"},{"location":"v1/architecture/#session-creation","title":"Session Creation","text":"<p>Important</p> <p>For internal only endpoint, mTLS (mutual TLS) is required, the API won't accept any request with invalid client certificate. If you are developing service that need access to internal endpoint, please refer the mTLS section on this documents.  </p>"},{"location":"v1/architecture/#mutual-tls","title":"Mutual TLS","text":"<p>The API protected internal endpoint by using mutual TLS . In Mutual TLS, each party must provide a valid certificate. Valid certificate in this case, is a certificate that were signed by the internal PKI. </p> <p>Info</p> <p>Please refer to endpoint documentation for details on which endpoint is internal only</p> <p>In order for your application to have a valid certificate, create a certificate sign request (csr) file, and send that request to the PKI API (Certificate - Manager). Then add the CA of the certificate manager to the trusted certificate, either on OS level or application level. Below is an example on how to do it on Linux (openssl and curl required):  1. Create a RSA private key (2048 bit) linux<pre><code>$ openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048\n</code></pre> 2. Create a CSR (Certificate Sign Request) File  linux<pre><code>$ export UNIT=\"/C=${COUNTRY}/ST=${STATE}/L=${LOCALITY}/O=${ORGANIZATION}/OU=${ORG_UNIT}/CN=${COMMON_NAME}\"\n$ export SUBJECT_ALT_NAME=\"DNS.1:${SERVICE_NAME},IP.1:${HOST\"\n\n$ openssl req -new \\\n    -key private_key.pem \\\n    -subj \"${UNIT}\" \\\n    -reqexts SAN \\\n    -config &lt;(cat /etc/ssl/openssl.cnf \\\n        &lt;(printf \"\\n[SAN]\\nsubjectAltName=${SUBJECT_ALT_NAME}\")) \\\n    -out $CSR_FILE_PATH\n</code></pre></p> <p>Info</p> <p>I don't know if <code>&lt;(printf \"\\n[SAN]\\nsubjectAltName=${SUBJECT_ALT_NAME}\")</code> available on Windows. </p> <p>Please change the placehoder (or add environment variables) with the proper values. </p> <ol> <li>Send the csr to the cert manager api linux<pre><code>$ curl -k https://$PKI_HOST/certificate -o cert/root-ca.crt\n</code></pre> This will save the signed CA for your service in cert/root-ca.crt. Use this in your application. </li> </ol> <p>Info</p> <p>PKI host is  34.101.181.190:5500</p> <ol> <li> <p>Get the Root Certificate linux<pre><code>$ curl -k -v -F \"csr=@${CSR_FILE_PATH}\" https://$PKI_HOST/certificate/sign -o $CERT_FILE_PATH\n</code></pre> This will save the Root CA in <code>CERT_FILE_PATH</code>.  </p> </li> <li> <p>(Optional) Encrypt your private key in PKCS8 Format linux<pre><code>$ openssl pkcs8 -topk8 -inform PEM -outform PEM -in private_key.pem -out $PRIVATE_KEY_PATH -passout file:/tmp/passphrase\n</code></pre> This will encrypt the private key using passphrase specified in the file /tmp/passphrase. </p> </li> </ol> <p>Now, when you want to create a request, provide the certificate. if you create a valid certificate, you won't get access_denied 403 Unauthroized error. </p>"},{"location":"v1/endpoint/","title":"endpoint","text":""},{"location":"v1/endpoint/#account","title":"Account","text":"<p>Properties</p> name type description username <code>string</code> A 64 length string that identifies a user name <code>string</code> User display name email <code>string</code> A valid email for authentication password <code>string</code> A minimum of 8 string password with combination of character and symbol <p>Header</p> name description Content-Type The content type of the request. Only accepted <code>application/json</code> Authorization Authorization header. Use <code>Bearer Token</code>."},{"location":"v1/endpoint/#1-register","title":"1. Register","text":"<p>To register a user to the server, send a POST request to the endpoint below:</p> <pre><code>POST /v1/account/register\n</code></pre>"},{"location":"v1/endpoint/#request","title":"Request","text":"<p>Header</p> name value Content-Type <code>application/json</code> <p>Body <pre><code>{\n    \"username\": \"required\",\n    \"name\": \"required\",\n    \"email\": \"required\",\n    \"password\": \"required\",\n}\n</code></pre></p>"},{"location":"v1/endpoint/#response","title":"Response","text":"<p>Header</p> name value Content-Type <code>application/json</code> <p>Properties</p> name description error_type a string for telling the error type <p>Succesful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"your account is successfully created. OTP has been sent to your email.\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      There are various 400 error type, below is the details regarding all possible bad request error type:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header username_exists username already taken username_invalid username content is invalid email_exists email already registered password_weak invalid password invalid_email provided an invalid email <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_the_error\"\n}\n</code></pre>"},{"location":"v1/endpoint/#2-verify-otp","title":"2. Verify OTP","text":"<p>After a successful registration, an OTP will be sent to the email on the request. To verify newly registered user, user must verify their account by sending a POST request to the endpoint below:</p> <pre><code>POST /v1/account/otp/verify\n</code></pre>"},{"location":"v1/endpoint/#request_1","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"email\": \"your_id_here\",\n    \"otp\": \"your_OTP_here\",\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_1","title":"Response","text":"<p>Successful Response (200 OK)</p> <ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"your account has been activated successfully\"\n}\n</code></pre></li> </ul> <p>Error Response   1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable invalid_otp OTP provided doesn't match with the server otp_expired OTP provided has already expired, please re send a new otp <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error caused by trying to verify otp from an active email or unregistered email. </li> </ol> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"email_not_found\",\n    \"description\": \"email not exist or email already active\"\n}\n</code></pre>"},{"location":"v1/endpoint/#3-resend-otp","title":"3. Resend OTP","text":"<p>A user are able to re-send confirmation email with a new OTP. Re-send mail can be sent in a interval of <code>60 seconds</code>. To re-send the mail, send a POST request to endpoint below:</p> <pre><code>POST /v1/account/otp/send\n</code></pre>"},{"location":"v1/endpoint/#request_2","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"email\": \"your_email_here\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_2","title":"Response","text":"name value Content-Type <code>application/json</code> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"successfull\",\n    \"message\": \"OTP has been re-send to your email.\",\n}\n</code></pre></p> <p>Error Response  1. 429 Too Many Requests          This error is caused by sending a re-send request too early. There are only one possible error type that is, <code>otp_resend_interval_not_reached</code> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"otp_resend_interval_not_reached\",\n    \"description\": \"Re send mail has already been sent\"\n}\n</code></pre></p>"},{"location":"v1/endpoint/#4-login","title":"4. Login","text":"<p>To log in user to the server and gain access to all service, sent a POST request to endpoint below:</p> <pre><code>POST /v1/account/login\n</code></pre>"},{"location":"v1/endpoint/#request_3","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type application/json <ul> <li>Body <pre><code>{\n    \"email\": \"your_email_here\",\n    \"password\": \"your_password_here\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_3","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"token\": {\n        \"accesss_token\": \"your_token_here\",\n        \"refresh_token\": \"your_refresh_token_here\",\n    }\n}\n</code></pre></p> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>401 Unauthenticated          There are two error that can caused this status code, that is</li> </ol> error_type description user_marked_inactive the user isn't registered successfully and currently marked as inactive invalid_credentials email or password is invalid <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre>"},{"location":"v1/endpoint/#5-patch-user-info-not-yet-implemented","title":"5. Patch User Info (NOT YET IMPLEMENTED)","text":"<p>Update user info partially, send a PATCH request to endpoint below:</p> <pre><code>PATCH /v1/account/{username}\n</code></pre>"},{"location":"v1/endpoint/#request_4","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> Authorization <code>Bearer your_token_here</code> <ul> <li>Body <pre><code>{\n    \"name\": \"your_new_name_here\" (optional),\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_4","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"Success updating user info\"\n}\n</code></pre></p> </li> <li> <p>Error Response  1. 400 Bad Request  This error can be caused by several reasons. The list of all possible error is listed below:</p> </li> </ul> error_type description header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>403 Forbidden</li> </ol> error_type description Invalid_auth_header The header specified a wrong auth method other than Bearer Token empty_auth_header Auth header is empty invalid_token Token provided is invalid token_expired Token has already expired <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found Username not found</li> </ol>"},{"location":"v1/endpoint/#6-link-steam-account","title":"6. Link Steam Account","text":"<p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <p>This endpoint is for storing user steamid into the database. </p>"},{"location":"v1/endpoint/#endpoint","title":"Endpoint","text":"<pre><code>POST /v1/account/{username}/steam\n</code></pre>"},{"location":"v1/endpoint/#request_5","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"steamid\": \"steam id\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_5","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"account is linked successfully\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error is caused by username in the path parameter doesn't exist <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"username_not_found\",\n    \"description\": \"username not found\",\n}\n</code></pre></li> </ol>"},{"location":"v1/endpoint/#7-rollback-steam-link","title":"7. Rollback Steam Link","text":"<p>This endpoint is for rollback steam linking </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_1","title":"Endpoint","text":"<pre><code>DELETE /v1/account/{username}/steam\n</code></pre>"},{"location":"v1/endpoint/#response_6","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"account is linked successfully\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error is caused by username in the path parameter doesn't exist</li> </ol> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"username_not_found\",\n    \"description\": \"username not found\",\n}\n</code></pre>"},{"location":"v1/endpoint/#8-get-steam-id","title":"8. Get Steam ID","text":"<p>This endpoint is for get the steam id of an account</p>"},{"location":"v1/endpoint/#endpoint_2","title":"Endpoint","text":"<pre><code>GET /v1/account/{username}/steamid\n</code></pre>"},{"location":"v1/endpoint/#response_7","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"steamid\": \"your steam id\"\n}\n</code></pre></p> <p>Error Response  1. 400 Bad Request  There are only one error response on this endpoint, and that is <code>steam_not_linked</code>. It was caused by trying to get steam id when the account hasn't been linked to a valid steam account. </p> <pre><code>{\n    \"status\": \"fail\",\n    \"error_type\": \"steam_not_linked\",\n    \"description\": \"account hasn't been linked to steam yet\"\n}\n</code></pre>"},{"location":"v1/endpoint/#9-logout","title":"9. Logout","text":"<p>This endpoint to logout your account from the service. After logout all of your token (access token and refresh token) will be revoked </p>"},{"location":"v1/endpoint/#endpoint_3","title":"Endpoint","text":"<pre><code>POST /v1/account/logout\n</code></pre>"},{"location":"v1/endpoint/#request_6","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> Authorization <code>Bearer your_token_here</code> <ul> <li>Body <pre><code>{\n    'username': 'fried_rice'\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#auth","title":"Auth","text":"<p>Properties</p> name description username valid account username for token claims email valid account email for token claims roles the roles of the user that issued the token"},{"location":"v1/endpoint/#token-type","title":"Token Type","text":"<ol> <li>Auth Token      Give access to verified user to endpoint that can be accessed with their credentials. This token is set to expired 15 minutes after the token has been issued. </li> <li>Refresh Token       Token for refresh auth token. This token will expired 1 day after the token has been issued. </li> </ol> <p>Info</p> <p>When auth token is refreshed, the refresh token also refreshed. So refresh token will expired after 1 day of inactivity. </p>"},{"location":"v1/endpoint/#1-issue-token","title":"1. Issue Token","text":"<p>To issue an access token for user, send a POST request to endpoint. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <pre><code>POST /v1/auth/token\n</code></pre>"},{"location":"v1/endpoint/#request_7","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p> <ul> <li>Body <pre><code>{\n    \"username\": \"issuer username\",\n    \"email\": \"issuer email\",\n    \"roles\": \"user role (user/admin)\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_8","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"access_token\": \"token\",\n    \"refresh_token\": \"refresh\",\n}\n</code></pre></p> </li> <li> <p>Failed Response 1. 400 Bad Request Below is several error that caused this error code:</p> </li> </ul> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header <ol> <li>403 Unauthorized  Only error for this code is <code>access_denied</code>. This happens when the client doesn't provide a valid certificate. </li> </ol>"},{"location":"v1/endpoint/#2-public-refresh-token","title":"2. (PUBLIC) Refresh Token","text":"<p>To refresh auth token, send a POST request to this endpoint</p> <pre><code>POST /v1/auth/token/refresh\n</code></pre>"},{"location":"v1/endpoint/#request_8","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> * Body <pre><code>{\n    \"access_token\": \"your_expired_token_here\",\n    \"refresh_token\": \"your_valid_refresh_token_here\",\n}\n</code></pre>"},{"location":"v1/endpoint/#response_9","title":"Response","text":"<ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\", \n    \"access_token\": \"your_new_access_token\",\n    \"refresh_token\": \"your_new_refresh_token\".\n}\n</code></pre></p> </li> <li> <p>Failed Response 1. 403 Unauthorized  This status is returned because of the issued token doesn't meet required conditions. Here are the error that can arise from this error code:</p> </li> </ul> error_type description refresh_denied cannot refresh access token because the previous one still active token_invalid access token invalid or refresh token invalid or your access token is revoked token_expired refresh token is expired claim_mismatch your access token and refresh token has different credentials <p>Info</p> <p>Revoked access token cannot be refreshed. </p> <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#3-verify-credentials","title":"3. Verify Credentials","text":"<p>This endpoint is for verifying your credentials. Send a POST request to this endpoint. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <pre><code>POST /v1/auth/verify \n</code></pre>"},{"location":"v1/endpoint/#request_9","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p>"},{"location":"v1/endpoint/#request_10","title":"Request","text":"<ul> <li>Body <pre><code>{\n    \"token\": \"your_token_here\",\n    \"endpoint\": \"the_endpoint_the_user_try_to_access\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_10","title":"Response","text":"<ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description token_invalid either the access token or refresh token is invalid token_expired refresh token is expired access_denied you don't have access to the endpoint <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#4-revoked-access-token","title":"4. Revoked Access Token","text":"<p>To revoke an active token, send a POST request to this endpoint</p> <pre><code>POST /v1/auth/token/revoke\n</code></pre> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p>"},{"location":"v1/endpoint/#request_11","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body</li> </ul> <pre><code>{\n    \"access_token\": \"access_token_that_need_to_be_revoked\"\n}\n</code></pre>"},{"location":"v1/endpoint/#response_11","title":"Response","text":"<ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description access_denied you don't have access to the endpoint"},{"location":"v1/endpoint/#games","title":"Games","text":"<p>Properties</p> name type description game_id <code>int</code> Game id assigned by steam name <code>string</code> Game display name display_picture <code>string</code> the url where the game display picture is stored icon_url <code>string</code> the url where the game icon is stored <p>Storage Location Schema</p> <pre><code>{\n    \"protocol\": \"nas\",\n    \"server\": {\n        \"ip\": \"192.168.0.1\",\n        \"port\": \"optional\"\n    },\n    \"path\": \"some/path/to/the/location\"\n}\n</code></pre> <p>Header</p> name description Content-Type The content type of the request. Only accepted <code>application/json</code>"},{"location":"v1/endpoint/#1-sync-games-to-user-account","title":"1. Sync Games to User Account","text":"<p>This is endpoint to sync user owned games in steam and add supported games to user games collections. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_4","title":"Endpoint","text":"<pre><code>POST /v1/games/{username}/sync\n</code></pre>"},{"location":"v1/endpoint/#request_12","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body</li> </ul> <pre><code>{\n    \"games\": [\n        {\n            \"name\": \"example game\",\n            \"icon_url\": \"http://media.steampowered.com/steamcommunity/public/images/apps/{appid}/{hash}.jpg\"\n            \"_id\": \"12312312321\",\n        }, \n        {\n            ...\n        }\n    ]\n}\n</code></pre>"},{"location":"v1/endpoint/#2-get-user-games-collections","title":"2. Get User Games Collections","text":"<p>This endpoint is for getting user collections of games. </p>"},{"location":"v1/endpoint/#endpoint_5","title":"Endpoint","text":"<pre><code>GET /v1/games/{username}/collections\n</code></pre>"},{"location":"v1/endpoint/#query-parameters","title":"Query Parameters","text":"parameter description cursor this parameter is used to get entry greater than this value. Default is <code>0</code> limit this parameter is used to specify how many values will be returned after the cursor. Default is <code>10</code>. The maximum value is <code>100</code>"},{"location":"v1/endpoint/#pagination","title":"Pagination","text":"<p>To get the first page, send request to this endpoint without specifying the offset or set offset to <code>0</code>.  Then to access the next page, use the offset value returned at the response. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#request_13","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code>"},{"location":"v1/endpoint/#response_12","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body</li> </ul> <p>Successful Response (200 OK) <pre><code>{\n    \"games\": [\n        {\n            \"game_id\": \"some_id_here\",\n            \"name\": \"some_name_here\",\n            \"game_icon\": \"http://path/to/icon.jpg\",\n            \"display_picture\": \"http://path/to/display.jpg\"\n        }\n    ],\n\n    \"offset\": \"12321\"\n}\n</code></pre></p> <p>Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route"},{"location":"v1/endpoint/#3-play-games","title":"3. Play Games","text":"<p>This endpoint is for creating a new session (VM) populated with requested games. </p>"},{"location":"v1/endpoint/#endpoint_6","title":"Endpoint","text":"<pre><code>POST /v1/games/play\n</code></pre>"},{"location":"v1/endpoint/#request_14","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code> Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"game_id\": \"122131\",\n    \"username\": \"username\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_13","title":"Response","text":"<p>Successful Response <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"session request has been successfully created\",\n    \"session_id\": \"your_session_id\"\n}\n</code></pre></p> <p>Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <p>Error Response <pre><code>{\n    \"status\": \"fail\",\n    \"error_type\": \"steam_not_linked\",\n    \"description\": \"account hasn't been linked to steam yet\"\n}\n</code></pre></p> <ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header <ol> <li>404 Not Found  This is caused because of the game id not found on the user collections. </li> </ol>"},{"location":"v1/endpoint/#session","title":"Session","text":"<p>This is a service that handle as middleware between client and session manager. </p>"},{"location":"v1/endpoint/#1-create-new-session","title":"1. Create New Session","text":"<p>Create new session request to session manager</p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_7","title":"Endpoint","text":"<pre><code>POST /v1/session/create\n</code></pre>"},{"location":"v1/endpoint/#request_15","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body <pre><code>{\n    \"username\": \"username\"\n    \"game_metadata\": {\n        \"game_id\": 14121,\n        \"game_location\": {\n            \"protocol\": \"nas\",\n            \"server\": {\n                \"ip\": \"192.168.101.1\",\n            }\n            \"path\": \"/location/to/ganme\"\n        }\n    }\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_14","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"session_id\": \"uuid-v7-id\"\n}\n</code></pre>"},{"location":"v1/endpoint/#2-get-session-status","title":"2. Get Session Status","text":"<p>View the status of the request</p>"},{"location":"v1/endpoint/#request-status","title":"Request Status","text":"<p>1. Provisioning  This is the step where the session service successfully create a VM creation request to session manager. </p> <p>2.WaitingForConnection  This is the step where the VM requested has changed it's status to Running and waiting for the client to connect to the VM Virtual LAN. (via ZeroTier)</p> <p>3.Pairing  This is the step where the client and VM successfully reside on the same LAN and waiting for the Sunshine and Moonlight to pair. </p> <p>4. Running  This is the step where configuration has set up successfully and client can used the VM. </p> <p>5. Failed  Some step has failed and the VM creation is cancelled. </p>"},{"location":"v1/endpoint/#endpoint_8","title":"Endpoint","text":"<pre><code>GET /v1/session/{session_id}/status\n</code></pre>"},{"location":"v1/endpoint/#request_16","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code> Content-Type <code>application/json</code>"},{"location":"v1/endpoint/#response_15","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"Provisioning\" \n}\n</code></pre> Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions or you are trying to access route without the correct permission. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <ol> <li>404 Not Found This status returned when you are trying to get status of session_id that isn't exist. </li> </ol>"},{"location":"v1/endpoint/#3-start-connection-establishment","title":"3. Start Connection Establishment","text":"<p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_9","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/connection/start\n</code></pre>"},{"location":"v1/endpoint/#request_17","title":"Request","text":"field_name type description webhook_host <code>string</code> host that will be called when data is ready network_id <code>string</code> zerotier network id <p>Important</p> <p>Make sure your endpoint has /pin route that accept JSON Content-Type for verifying user pin. The API will accept 200 as a valid response else it's considered as failure. The payload schema is the same as the Pair endpoint route below. </p> <ul> <li>Body <pre><code>{\n    \"webhook_host\": \"the_ip:the_port\",\n    \"network_id\": \"network_id\",\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_16","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"instance has been successfully attached to the session\"\n}\n</code></pre></p> <p>Error Response 1. 400 Bad Request  Below is several error that caused this error code:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#3-pair","title":"3. Pair","text":"<p>Start pairing sunshine with moonlight. When success, the status of the request will changed to <code>Running</code>. This endpoint need to be called from the client. </p>"},{"location":"v1/endpoint/#endpoint_10","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/pair\n</code></pre>"},{"location":"v1/endpoint/#request_18","title":"Request","text":"<pre><code>{\n    \"pin\": \"your_pin_here\"\n}\n</code></pre> <p>Successful Reponse (200 OK) <pre><code>{\n    \"status\": \"success\".\n    \"message\": \"client has been paired successfully to the session instance\"\n}\n</code></pre></p> <p>Error Response 1. 400 Bad Request  Below is several error that caused this error code:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header invalid_pin pin provided is incorrect"},{"location":"v1/endpoint/#4-terminate-session","title":"4. Terminate Session","text":"<p>Terminate current session</p>"},{"location":"v1/endpoint/#endpoint_11","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/terminate\n</code></pre>"},{"location":"v1/installation/","title":"Installation","text":"<p>You could easily run this project on local environment by using docker-compose. Below is the step to deploy the application:</p> <p>If you on Linux, you could deploy the application by running the <code>init</code> bash scripts on deployment folder <pre><code>$ ./deployments/init.sh\n</code></pre></p> <p>Else, you could manually run all service needed for deployment </p> <ol> <li> <p>Deploy Certificate Manager Service <pre><code>$ cd cert-manager &amp;&amp; docker-compose up\n</code></pre></p> </li> <li> <p>After cert-manager is up, run the API service <pre><code>$ cd ../deployments &amp;&amp; docker-compose-up\n</code></pre></p> </li> <li> <p>After all service is up and running, you could view the API documentation on <code>localhost:9000</code></p> </li> <li> <p>Postman collection for testing are available on TBA</p> </li> </ol>"},{"location":"v1/milestones/","title":"milestones","text":""},{"location":"v1/milestones/#fully-functional-user-service-deadline-not-set","title":"Fully functional user service (Deadline: Not Set)","text":"<ul> <li> database design</li> <li> functional register and login</li> <li> dependable session management</li> <li> need otp support?</li> <li> steam links using openID </li> </ul>"},{"location":"v1/milestones/#fully-functional-games-service-deadline-not-set","title":"Fully functional games service (Deadline: Not Set)","text":"<ul> <li> database design </li> <li> stored list of user steam games that are supported by the service</li> <li> pagination</li> <li> search funtionality (w elasticsearch) (?)</li> </ul>"},{"location":"v1/milestones/#middleware","title":"Middleware","text":"<ul> <li> send otp from server to client email</li> <li> </li> <li> dependable middleware to link steam </li> </ul>"},{"location":"v1/milestones/#fully-functional-mail-middleware","title":"Fully functional mail middleware","text":""},{"location":"v1/milestones/#fully-functional-steam-openid-auth-middleware-for-steam-link","title":"Fully functional steam openid auth middleware for steam link","text":""},{"location":"v1/milestones/#testing","title":"Testing","text":"<ul> <li> Integration testing</li> </ul>"},{"location":"v1/milestones/#up-to-date-documentation-deadline-not-set","title":"Up to date Documentation (Deadline: Not Set)","text":"<ul> <li> <p> endpoint for all service is well documented (Deadline: Not Set)</p> <ul> <li> user service endpoint</li> <li> games service endpoint</li> <li> session service endpoint</li> <li> auth service endpoint</li> <li> middleware service endpoint</li> </ul> </li> <li> <p> architecture is well documented</p> <ul> <li> complete diagram of the backend design </li> <li> all service database design</li> <li> codebase documentation</li> </ul> </li> </ul>"}]}