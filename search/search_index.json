{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cloud Gaming API Documentation","text":"<p>Welcome to Cloud Gaming API documetation. It's still not have a stable release yet,  so the functionality may change in the future. </p>"},{"location":"#api-endpoint-references","title":"API Endpoint References","text":"<p>This is the documentation to all available (public and internal) endpoint the api provided. </p>"},{"location":"#architecture-references","title":"Architecture References","text":"<p>This is the documentation of the underlying architecture and codebase. </p>"},{"location":"#codebase-references","title":"Codebase References","text":"<p>This is the documentation of the codebase for api development</p>"},{"location":"#installation","title":"Installation","text":"<p>This is the documentation to locally install this api for testing. </p>"},{"location":"#milestones","title":"Milestones","text":"<p>List of features that are already added and going to be added in the future</p>"},{"location":"v1/architecture/","title":"Architecture","text":"<p>This API used <code>one database per service pattern</code></p> <p></p>"},{"location":"v1/architecture/#service-details","title":"Service Details","text":""},{"location":"v1/architecture/#user","title":"User","text":"<p>This service handle <code>/v1/account</code> endpoint. This service deal with account related stuff</p>"},{"location":"v1/architecture/#games","title":"Games","text":"<p>This service handle <code>/v1/games</code> endpoint. This service handle user game collections</p>"},{"location":"v1/architecture/#auth","title":"Auth","text":"<p>This service handle <code>/v1/auth</code> endpoint. This service handle client authorization to access specific endpoint</p>"},{"location":"v1/architecture/#session","title":"Session","text":"<p>This service handle <code>/v1/session</code>endpoint. This service is a middleware between client and session manager.</p>"},{"location":"v1/architecture/#certificate-manager","title":"Certificate Manager","text":"<p>This service handle certificate distribution to all the service above for internal HTTPS communications and internal service authentication. </p>"},{"location":"v1/architecture/#session-manager","title":"Session Manager","text":"<p>This is the service that handle VM creation automation. </p>"},{"location":"v1/architecture/#database-schema","title":"Database Schema","text":""},{"location":"v1/architecture/#games_1","title":"Games","text":"<p>This the table schema of games service database. </p> <p>There are three tables; games, storage_location, and user_games_collections. games is a table that store all supported games. This table hold information on the name of the games, the game icon, and the display picture (icon but big), and storage_id which point to storage_location table. storage_location table give information on to retrieve game from the storage location. This information include the protocol, ip/host, port (if needed), and location or endpoint.</p>"},{"location":"v1/architecture/#session_1","title":"Session","text":"<p>In the session database, there are three tables, session, session_host, and session_metadata. Session is for storing the request status of the session. The status is of type ENUM called status. See the session details on endpoint for details regarding the possible value of the status.  The session id using UUIDv7 stored in bytes format.  </p> <p>In session_metadata table, there are data for storing extra information regarding the session. That include the creation time the username that create the session, and the game that are played</p> <p>session_host table store information regarding the VM that hosted the session. That include the address of the VM and the zero-tier networkid. </p>"},{"location":"v1/architecture/#flowchart","title":"Flowchart","text":""},{"location":"v1/architecture/#steam-link","title":"Steam Link","text":"<p>To be able to use the game service, first, the user need to link their steam account.  </p> <p>Upon accessing /v1/middleware/steam/{username}, the page will be redirected to the steam login page </p> <p>Upon successful login, the user will be redirected to the success_redirect that were assigned in the query parameter. If success_redirect query parameter is not set, then the middleware will use it's default success redirect. </p> <p>If any error occured during this process, the middleware will redirect user to fail_redirect that were also set in the query parameter. It will use default fail redirect when the query parameter is not set.  </p> <p>Default redirect only show a JSON message to the user, below is the example on default failure redirect</p> <p></p>"},{"location":"v1/architecture/#session-creation","title":"Session Creation","text":"<p>Important</p> <p>For internal only endpoint, mTLS (mutual TLS) is required, the API won't accept any request with invalid client certificate. If you are developing service that need access to internal endpoint, please refer the mTLS section on this documents.  </p>"},{"location":"v1/architecture/#mutual-tls","title":"Mutual TLS","text":"<p>The API protected internal endpoint by using mutual TLS . In Mutual TLS, each party must provide a valid certificate. Valid certificate in this case, is a certificate that were signed by the internal PKI. </p> <p>Info</p> <p>Please refer to endpoint documentation for details on which endpoint is internal only</p> <p>In order for your application to have a valid certificate, create a certificate sign request (csr) file, and send that request to the PKI API (Certificate - Manager). Then add the CA of the certificate manager to the trusted certificate, either on OS level or application level. Below is an example on how to do it on Linux (openssl and curl required):  1. Create a RSA private key (2048 bit) linux<pre><code>$ openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048\n</code></pre> 2. Create a CSR (Certificate Sign Request) File  linux<pre><code>$ export UNIT=\"/C=${COUNTRY}/ST=${STATE}/L=${LOCALITY}/O=${ORGANIZATION}/OU=${ORG_UNIT}/CN=${COMMON_NAME}\"\n$ export SUBJECT_ALT_NAME=\"DNS.1:${SERVICE_NAME},IP.1:${HOST\"\n\n$ openssl req -new \\\n    -key private_key.pem \\\n    -subj \"${UNIT}\" \\\n    -reqexts SAN \\\n    -config &lt;(cat /etc/ssl/openssl.cnf \\\n        &lt;(printf \"\\n[SAN]\\nsubjectAltName=${SUBJECT_ALT_NAME}\")) \\\n    -out $CSR_FILE_PATH\n</code></pre></p> <p>Info</p> <p>I don't know if <code>&lt;(printf \"\\n[SAN]\\nsubjectAltName=${SUBJECT_ALT_NAME}\")</code> available on Windows. </p> <p>Please change the placehoder (or add environment variables) with the proper values. </p> <ol> <li>Send the csr to the cert manager api linux<pre><code>$ curl -k https://$PKI_HOST/certificate -o cert/root-ca.crt\n</code></pre> This will save the signed CA for your service in cert/root-ca.crt. Use this in your application. </li> </ol> <p>Info</p> <p>PKI host is  34.101.181.190:5500</p> <ol> <li> <p>Get the Root Certificate linux<pre><code>$ curl -k -v -F \"csr=@${CSR_FILE_PATH}\" https://$PKI_HOST/certificate/sign -o $CERT_FILE_PATH\n</code></pre> This will save the Root CA in <code>CERT_FILE_PATH</code>.  </p> </li> <li> <p>(Optional) Encrypt your private key in PKCS8 Format linux<pre><code>$ openssl pkcs8 -topk8 -inform PEM -outform PEM -in private_key.pem -out $PRIVATE_KEY_PATH -passout file:/tmp/passphrase\n</code></pre> This will encrypt the private key using passphrase specified in the file /tmp/passphrase. </p> </li> </ol> <p>Now, when you want to create a request, provide the certificate. if you create a valid certificate, you won't get access_denied 403 Unauthroized error. </p>"},{"location":"v1/codebase/","title":"Codebase","text":"<p>The API for this project is created mainly using Go. Some middlewares is created using Node.js with Express.js frameworks. </p>"},{"location":"v1/codebase/#api","title":"API","text":""},{"location":"v1/codebase/#get-started","title":"Get Started","text":"<p>The API is built using Go. The API is divided into services. Each services consist of few files. First being main.go as the entrypoint of the service API. To differ the main and routes, each service has a package called <code>routes</code>. This package is used to declare the routes of the service. This route need to follow the endpoint format of:</p> <pre><code>/{version}/{service_name}/{endpoint}\n</code></pre> <p>So, it's mandatory to use a subrouter for ease of use. Below is a snippet on how to declare the subrouter:  1. Create a subrouter with the version in main.go before setting the route</p> main.go<pre><code>// Preview the library section for more info on \n// the wrapper routerX\nr := router.CreateRouterx() \n// This will create a router with /v1/ prefix\nroutes.SetServiceRoute(r.PathPrefix(\"/v1\").Subrouter())\n</code></pre> <ol> <li>Create a subrouter with the service name as the prefix from the router input service.go<pre><code>func SetServiceRoute(r *mux.Router) {\n    // This will create a router with prev_prefix/service/\n    // prefix\n    subrouter := r.PathPrefix(\"/service\").Subrouter()\n    /* Set route handler /*\n}\n</code></pre></li> </ol> <p>Besides routes and the entrypoint, each service has it's own config.go files that are placed on config package. This files declared the configuration of the server, such as host, database, and other service that this service depend on. <code>config.go</code> will parse configuration from json files called <code>app.config.json</code> that are placed within the same folder as the config.go files. </p> <p>Below is an example on how to create config.go files for api service</p> <pre><code>package config\n\ntype Config struct {\n    ServiceName string `json:\"service_name\"`\n    /*Other Fields*/\n}\n\n\nfunc ParseConfig(path string) {\n    // Read the other configuration from app.config.json\n    exe, err := os.Executable()\n    if err != nil {\n        panic(err)\n    }\n\n    exePath := filepath.Dir(exe)\n\n    configFile, err := os.Open(filepath.Join(exePath, \"\", path))\n\n    if err != nil {\n        return nil, err\n    }\n\n    defer configFile.Close()\n\n    err = jsonutil.DecodeJSON(configFile, &amp;config)\n\n    if err != nil {\n        return nil, err\n    }\n\n    /* Do other things */\n\n    return config, err\n}\n</code></pre> <p>Warning</p> <p>For ease of deployment, any secret key or other sensitive configuration, place them inside an environment variables. REFRAIN FROM PLACING THEM ON THE CONFIG FILE. </p>"},{"location":"v1/codebase/#custom-library","title":"Custom Library","text":"<p>This codebase use a custom http library which are an extensions of Golang http library. </p>"},{"location":"v1/codebase/#custom-handler-type","title":"Custom Handler Type","text":"<p>In this library, there are few types that are declared, that is</p> <pre><code>type Handler struct {\n    Metadata *Metadata\n    Handler HandlerLogic\n}\n</code></pre> <p>This type is the <code>http.Handler</code> equivalent, and used to create a handler for a route. This struct implement the <code>http.Handler</code> interface. </p>"},{"location":"v1/codebase/#metadata","title":"Metadata","text":"<p>This handler two field, that is, metadata, which is a struct type</p> <pre><code>type Metadata struct {\n    DB *sql.DB\n    Cache *cache.RedisClient\n    Config interface{}\n}\n</code></pre> <p>This struct hold data/struct that may be needed on the handler, such as database and cache, and configuration files. </p>"},{"location":"v1/codebase/#handlerlogic","title":"HandlerLogic","text":"<p>As for <code>HandlerLogic</code>, it's a function that act as the main logic of the handler. The function has a signature as follows:</p> <pre><code>type HandlerLogic func(metadata *Metadata, w http.ResponseWriter, r *http.Request) responseerror.HTTPCustomError\n</code></pre>"},{"location":"v1/codebase/#custom-http-error","title":"Custom HTTP Error","text":"<p>For convenience, each handler must return a custom error type called <code>HTTPCustomError</code>.</p> <pre><code>type ResponseError struct {\n    Code    int\n    Message string\n    Name    string\n}\n</code></pre> <p>The field is straightforward. Code is the return code of the error, such as 404 for Not Found, 400 for Bad Request, etc. Name is the name of the error, which must be an ENUM. When creating a new name of the error, you must add them into the list of all error type in the correct error group (Bad Request, Not Found, etc.). </p> <p>For message, it's a brief description of the errors that were thrown. Same as errorType, you must declare the message on the correct group as a template. This makes the message dynamic. You can add <code>{{.dynamicFields}}</code> into your string.  <code>responseerror</code> package has a function named <code>ParseMessage</code> that can replace the placeholder with the value on a map with the same key. </p> <pre><code>type errorMessageTemplate string\nconst (\n    template errorMessageTemplate \"Hello, {{.name}}. {{.MOTD}}\"\n)\n\ns := responseerror.ParseMessage(tmp errorMessageTemplate, map[string]string{\n    \"name\": \"John Smith\",\n    \"MOTD\": \"Good Morning!\",\n})\n\nfmt.Println(s) // \"Hello, John Smith. Good Morning!\"\n</code></pre>"},{"location":"v1/codebase/#all-errors","title":"All Errors","text":"<ol> <li> <p>Bad Request  <pre><code>const (\n    MissingParameter     errorType = \"missing_parameter\"\n    HeaderValueMistmatch errorType = \"header_value_mismatch\"\n    UsernameExists       errorType = \"username_exists\"\n    EmailExists          errorType = \"email_exists\"\n    UsernameInvalid      errorType = \"username_invalid\"\n    PasswordWeak         errorType = \"password_weak\"\n    EmailInvalid         errorType = \"invalid_email\"\n    PayloadInvalid       errorType = \"invalid_payload\"\n    OTPInvalid           errorType = \"invalid_otp\"\n    OTPExpired           errorType = \"otp_expired\"\n    CallsStatusInvalid   errorType = \"invalid_status_value\"\n    SteamNotLinked       errorType = \"steam_not_linked\"\n    SteamAlreadyLinked   errorType = \"steam_has_been_linked\"\n    MalformedSessionID   errorType = \"malformed_uuidv7_id\"\n    InvalidPIN           errorType = \"invalid_pin\"\n)\n\nconst (\n    MissingParameterMessage     errorMessageTemplate = \"required field {{.field}} is missing\"\n    HeaderValueMistmatchMessage errorMessageTemplate = \"mismatch value in header {{.name}}\"\n    UsernameExistMessage        errorMessageTemplate = \"email already taken\"\n    EmailsExistMessage          errorMessageTemplate = \"username already taken\"\n    UsernameInvalidMessage      errorMessageTemplate = \"username is invalid\"\n    PasswordWeakMessage         errorMessageTemplate = \"password is weak\"\n    EmailInvalidMessage         errorMessageTemplate = \"email is invalid\"\n    PayloadInvalidMessage       errorMessageTemplate = \"payload is invalid\"\n    OTPInvalidMessage           errorMessageTemplate = \"otp is invalid\"\n    OTPExpiredMessage           errorMessageTemplate = \"otp is expired. please resend a new otp to your email\"\n    StatusInvalidMessage        errorMessageTemplate = \"trying to update status to {{.reqStatus}} when user status is {{.status}}\"\n    SteamAlreadyLinkedMessage   errorMessageTemplate = \"this account has been linked to steam\"\n    SteamNotLinkedMessage       errorMessageTemplate = \"account has not been linked to steam yet\"\n    MalformedSessionIDMessage   errorMessageTemplate = \"{{.id}} cannot be parsed as a valid uuidv7 id \"\n    InvalidPINMessage           errorMessageTemplate = \"{{.pin}} is invalid\"\n)\n</code></pre></p> </li> <li> <p>Unauthenticated <pre><code>const (\n    UserMarkedInActive errorType = \"user_marked_inactive\"\n    InvalidCredentials errorType = \"invalid_credentials\"\n)\n\nconst (\n    UserMarkedInActiveMessage errorMessageTemplate = \"your account hasn't been verified and currently marked inactive\"\n    InvalidCredentialsMessage errorMessageTemplate = \"email or password is wrong\"\n)\n</code></pre></p> </li> <li> <p>Unauthorized <pre><code>const (\n    InvalidAuthHeader errorType = \"invalid_auth_header\"\n    EmptyAuthHeader   errorType = \"empty_auth_header\"\n    InvalidToken      errorType = \"invalid_token\"\n    TokenExpired      errorType = \"token_expired\"\n    RefreshDenied     errorType = \"refresh_denied\"\n    ClaimsMismatch    errorType = \"claims_mismatch\"\n    AccessDenied      errorType = \"access_denied\"\n)\n\nconst (\n    InvalidAuthHeaderMessage errorMessageTemplate = \"Not accepted authorization of type {{.authType}}\"\n    EmptyAuthHeaderMessage   errorMessageTemplate = \"Required authorization header in request header\"\n    InvalidTokenMessage      errorMessageTemplate = \"Invalid Token.{{.description}}\"\n    TokenExpiredMessage      errorMessageTemplate = \"your token has expired\"\n    RefreshDeniedMessage     errorMessageTemplate = \"cannot get new access token when the previous one still active\"\n    ClaimsMismatchMessage    errorMessageTemplate = \"refresh claims and username claims don't share the same credentials\"\n    MTLSFailureMessage       errorMessageTemplate = \"cannot establish trust. certificate is either invalid, revoked, or empty\"\n    AccessDeniedMesage       errorMessageTemplate = \"you don't have permission to access this route\"\n)\n</code></pre></p> </li> <li> <p>Internal Service Error <pre><code>const (\n    InternalServiceErr errorType = \"internal_service_error\"\n)\n\nconst (\n    InternalServiceErrorTemplate errorMessageTemplate = \"sorry, we cannot proceed with your request at the moment. please try again later!. \"\n)\n\ntype InternalServiceError struct {\n    *ResponseError\n    Description string\n}\n</code></pre></p> </li> </ol> <p>Info</p> <p>Internal Service Error is a unique one. It add a new field to the struct. That is the description. When a Internal Service Error is thrown, the service will print the <code>error description</code>. </p> <ol> <li>Too Many Request <pre><code>const (\n    ResendIntervalNotReachedErr errorType = \"otp_resend_interval_not_reached\"\n)\n\nconst (\n    ResendIntervalNotReachedMessage errorMessageTemplate = \"Mail has already been sent to your registered email\"\n)\n</code></pre></li> </ol>"},{"location":"v1/codebase/#querynator","title":"Querynator","text":"<p>This API don't use ORM library to make the query. <code>Querynator</code> is the library that were used to create query to the database. <code>Querynator</code> is built on PostgreSQL on mind, so the functionality may break when using other driver. </p> <p>Querynator has three mode, normal, batch insert, and join. </p> <p>As for now, querynator support this operation: 1. Insert (Normal Mode)  2. Batch Insert (Filter Batch Insert Mode  3. Filter Batch Insert (Filter Batch Insert Mode)  4. Update (Normal Mode)  5. Delete (Normal Mode)  6. Find (Normal Mode)  7. FindOne (Normal Mode)  8. IsExist (Normal Mode)  9. Find (Join Mode)  10. Transaction (Begin, Commit, and Rollback) </p> <p><code>Querynator</code> use <code>sqlx</code>  for some advanced functionality such as parse multiple SQL rows into a struct. This is used heavily on Find.  Other than that, it used plain SQL interface from the standard library. </p>"},{"location":"v1/codebase/#normal-mode","title":"Normal Mode","text":"<p> 1. Insert  <pre><code>func (q *Querynator) Insert(v interface{}, db QueryOperation, tableName string, returnField string) (interface{}, error)\n</code></pre></p> <p>This function will insert data specified in v to the database with table equal to <code>tableName</code>. v must be of type <code>struct</code> and has <code>db</code> tag on the fields to specify the column name of the fields. If <code>returnField</code> is not an empty string, <code>interface{}</code> will has the return value from column specified in <code>returnField</code></p> <p>Important</p> <p>Insert will ignore field that aren't initialized (equal to the zero value for basic type and length is zero for a slice)</p> <ol> <li>Delete  <pre><code>func (q *Querynator) Delete(v interface{}, db QueryOperation, tableName string) error {\n</code></pre></li> </ol> <p>This function will delete v from the database from table equal to <code>tableName</code>. </p> <ol> <li>Update  <pre><code>func (q *Querynator) Update(v interface{}, conditionNames []string, conditionValues []any, db QueryOperation, tableName string) error {\n</code></pre></li> </ol> <p>This function will update data in the database with non empty value from v. Data that fit the condition specified will be updated. </p> <ol> <li>IsExists  <pre><code>func (q *Querynator) IsExists(v interface{}, db *sql.DB, tableName string) (bool, error) {\n</code></pre></li> </ol> <p>Check if v exist in the database </p> <ol> <li>FindOne  <pre><code>func (q *Querynator) FindOne(v interface{}, dest interface{}, db *sql.DB, tableName string, returnFieldsName ...string) error {\n</code></pre></li> </ol> <p>Find one row that has the same value as v and load the result to dest. </p> <ol> <li>Find  <pre><code>func (q *Querynator) Find(v interface{}, dest interface{}, limit int, db *sql.DB, tableName string, returnFieldsName ...string) error {\n</code></pre> Find all occurences in the database that has the same value as v and load them into dest</li> </ol>"},{"location":"v1/codebase/#join","title":"Join","text":"<p>To change mode to Join Mode, call the initiate join operation methods of querynator. </p> <pre><code>func (q *Querynator) PrepareJoinOperation() *JoinQueryExecutor\n</code></pre> <p>This will create a <code>JoinQueryExecutor</code> instance. </p> <ol> <li>Add Join Table This will attach a table into the join operation <pre><code>func (e *JoinQueryExecutor) AddJoinTable(joinTableName string, joinKeyName string, receiverTableName string, receiverForeignKeyName string) {\n</code></pre></li> </ol> <p><code>joinTableName</code> is the new table that are going to be added to the operation. <code>receiverTableName</code> is the name of the table that are matched against the new table, and must have already been declared/added to the operation (either via <code>AddJoinTable</code> or the name that are placed on the Find method) 2. UseExplicitCast <pre><code>func (e *JoinQueryExecutor) UseExplicitCast()\n</code></pre></p> <p>This will explicitly cast into the type of the conditions that are specified in Find method.  3. SetLimit <pre><code>func (e *JoinQueryExecutor) SetLimit(limit int)\n</code></pre></p> <p>This will limit the amout of result the find method will return.  4. OrderBy <pre><code>const (\n    ASCENDING  OrderType = \"ASC\"\n    DESCENDING OrderType = \"DESC\"\n)\n\nfunc (e *JoinQueryExecutor) OrderBy(orderByField string, orderType OrderType) {\n</code></pre></p> <p>This will order the result based on the field, either ASCENDING or DESCENDING. </p> <ol> <li>Find <pre><code>func (e *JoinQueryExecutor) Find(db *sql.DB, condition []QueryCondition, dest interface{}, tableName string, joinClause JoinClause, returnFields map[string][]string) error {\n</code></pre></li> </ol> <p>Executor the join operation and return value based on <code>returnFields</code> that matched the conditions specified. If the <code>returnFields</code> is happened to have a null value, the query will change the value into a zero value of the appropriate type. </p>"},{"location":"v1/codebase/#filter-operation","title":"Filter Operation","text":"<p>To create filter operation, one must first call <code>PrepareFilterOperation</code> methods of <code>querynator</code>. </p> <pre><code>func (q *Querynator) PrepareFilterOperation() *FilteredQueryExecutor {\n</code></pre> <p>This will return a <code>FilteredQueryExecutor</code>. </p> <p>Filter query is an operation where the operation is conducted by looking at other table values. If the data fit the criteria, the operations is executed, else it was ignored. </p> <p>Info</p> <p>Filter query currently only support batch insert. </p> <ol> <li> <p>AddTableSource <pre><code>func (f *FilteredQueryExecutor) AddTableSource(tableSource string, columnSource string, columnReceiver string) {\n</code></pre> This will add table that will be used for comparison for the data </p> </li> <li> <p>UseTransaction <pre><code>func (f *FilteredQueryExecutor) UseTransaction(db *sql.DB) error\n</code></pre></p> </li> </ol> <p>This will begin a transcation. The transaction instance will be placed on field called Tx. </p> <ol> <li>BatchInsert <pre><code>func (f *FilteredQueryExecutor) BatchInsert(data interface{}, db *sql.DB, tableName string) error {\n</code></pre></li> </ol> <p>Insert data in batch.  4. Rollback <pre><code>func (f *FilteredQueryExecutor) Rollback() error\n</code></pre></p> <p>Rollback the operation.  6. Commit <pre><code>func (f *FilteredQueryExecutor) Commit() error\n</code></pre></p> <p>Commit the operation. </p>"},{"location":"v1/codebase/#routerx-and-routex","title":"Routerx and Routex","text":"<p>This is an extensions to <code>mux.Router</code></p> <pre><code>type Routerx struct {\n    Router   *mux.Router\n    Metadata *httpx.Metadata\n}\n</code></pre> <p>To create a new <code>routerx</code>, call the function <code>CreateRouterx</code></p> <pre><code>func CreateRouterx(metadata *httpx.Metadata) *Routerx\n</code></pre> <p><code>Routerx</code> only implements a handful of <code>mux.Router</code> methods, that includes, <code>Handle</code>, <code>PathPrefix</code>, and <code>Use</code>. Other functionality can be called via <code>Router</code> field. </p> <p><code>Routerx</code> also not implement <code>http.Handler</code> interface, so to attach router to http server, use <code>Router</code> field. </p> <p>Equivalent to <code>mux.Router</code>. Handle methods attach handler into a route instance called <code>routex</code>, that are a wrapper to <code>mux.Route</code>. </p> <p><code>routex</code>, add one new methods, that is <code>UseMiddleware</code>. This will attach a middleware chain to the handler of the route. </p>"},{"location":"v1/codebase/#middleware","title":"Middleware","text":"<p>Middleware is a <code>http.Handler</code> that can called other <code>http.Handler</code> specified in <code>next</code>. In this codebase, middleware is declared as a type</p> <pre><code>type Middleware func(next http.Handler) http.Handler\n</code></pre> <p>This signature follows the <code>mux.Middlewarefnc</code> type. </p> <p>A few useful middleware has been implemented, that is  1. Payload Check Middleware  2. Auth Middleware  3. Certificate Check Middleware  4. Route Getter Middleware</p> <p>Middleware 1-3 need to be initialized. Middleware 4 does not. </p> <p>Here is a snippet on auth middleware factory <pre><code>func AuthMiddleware(authAPI ServiceAPI, tlsConfig *tls.Config, metadata *httpx.Metadata) Middleware {\n    return func(next http.Handler) http.Handler {\n        fn := func(metadata *httpx.Metadata, w http.ResponseWriter, r *http.Request) responseerror.HTTPCustomError {\n            var token string\n\n            endpoint := r.Context().Value(EndpointKey).(string)\n\n            auth := r.Header.Get(\"Authorization\")\n\n            if auth == \"\" {\n                return responseerror.CreateBadRequestError(\n                    responseerror.EmptyAuthHeader,\n                    responseerror.EmptyAuthHeaderMessage,\n                    nil,\n                )\n            }\n\n            if authType, authValue, _ := strings.Cut(auth, \" \"); authType != \"Bearer\" {\n                return responseerror.CreateUnauthorizedError(\n                    responseerror.InvalidAuthHeader,\n                    responseerror.InvalidAuthHeaderMessage,\n                    map[string]string{\n                        \"authType\": authType,\n                    },\n                )\n\n            } else {\n                token = authValue\n            }\n\n            req := &amp;httpx.HTTPRequest{}\n            req, err := req.CreateRequest(\n                authAPI.Scheme,\n                authAPI.Host,\n                authAPI.Port,\n                AUTH_VERIFY_TOKEN_ENDPOINT,\n                http.MethodPost,\n                http.StatusOK,\n                struct {\n                    Token    string `json:\"token\"`\n                    Endpoint string `json:\"endpoint\"`\n                }{\n                    Token:    token,\n                    Endpoint: endpoint,\n                },\n                tlsConfig,\n            )\n\n            if err != nil {\n                return err\n            }\n\n            claims := &amp;jwtutil.Claims{}\n            err = req.Send(claims)\n\n            if err != nil {\n                return err\n            }\n\n            // send token and claims into the next middleware chain\n            ctx := context.WithValue(r.Context(), ClaimsKey, claims)\n            ctx = context.WithValue(ctx, TokenKey, token)\n\n            next.ServeHTTP(w, r.WithContext(ctx))\n            return nil\n        }\n\n        return &amp;httpx.Handler{\n            Metadata: metadata,\n            Handler:  fn,\n        }\n    }\n}\n</code></pre></p> <p>Other middleware follows a similar pattern. </p> <p>Warning</p> <p>Auth middleware required you to use route getter middleware before this middleware. Omitting that middleware will create a panic. Beware!</p> <p>Info</p> <p>data is being passed through middleware chain via context. Use the ContextKey to retrieve any relevant information. </p>"},{"location":"v1/endpoint/","title":"Endpoint","text":""},{"location":"v1/endpoint/#account","title":"Account","text":"<p>Properties</p> name type description username <code>string</code> A 64 length string that identifies a user name <code>string</code> User display name email <code>string</code> A valid email for authentication password <code>string</code> A minimum of 8 string password with combination of character and symbol <p>Header</p> name description Content-Type The content type of the request. Only accepted <code>application/json</code> Authorization Authorization header. Use <code>Bearer Token</code>."},{"location":"v1/endpoint/#1-register","title":"1. Register","text":"<p>To register a user to the server, send a POST request to the endpoint below:</p> <pre><code>POST /v1/account/register\n</code></pre>"},{"location":"v1/endpoint/#request","title":"Request","text":"<p>Header</p> name value Content-Type <code>application/json</code> <p>Body <pre><code>{\n    \"username\": \"required\",\n    \"name\": \"required\",\n    \"email\": \"required\",\n    \"password\": \"required\",\n}\n</code></pre></p>"},{"location":"v1/endpoint/#response","title":"Response","text":"<p>Header</p> name value Content-Type <code>application/json</code> <p>Properties</p> name description error_type a string for telling the error type <p>Succesful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"your account is successfully created. OTP has been sent to your email.\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      There are various 400 error type, below is the details regarding all possible bad request error type:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header username_exists username already taken username_invalid username content is invalid email_exists email already registered password_weak invalid password invalid_email provided an invalid email <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_the_error\"\n}\n</code></pre>"},{"location":"v1/endpoint/#2-verify-otp","title":"2. Verify OTP","text":"<p>After a successful registration, an OTP will be sent to the email on the request. To verify newly registered user, user must verify their account by sending a POST request to the endpoint below:</p> <pre><code>POST /v1/account/otp/verify\n</code></pre>"},{"location":"v1/endpoint/#request_1","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"email\": \"your_id_here\",\n    \"otp\": \"your_OTP_here\",\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_1","title":"Response","text":"<p>Successful Response (200 OK)</p> <ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"your account has been activated successfully\"\n}\n</code></pre></li> </ul> <p>Error Response   1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable invalid_otp OTP provided doesn't match with the server otp_expired OTP provided has already expired, please re send a new otp <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error caused by trying to verify otp from an active email or unregistered email. </li> </ol> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"email_not_found\",\n    \"description\": \"email not exist or email already active\"\n}\n</code></pre>"},{"location":"v1/endpoint/#3-resend-otp","title":"3. Resend OTP","text":"<p>A user are able to re-send confirmation email with a new OTP. Re-send mail can be sent in a interval of <code>60 seconds</code>. To re-send the mail, send a POST request to endpoint below:</p> <pre><code>POST /v1/account/otp/send\n</code></pre>"},{"location":"v1/endpoint/#request_2","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"email\": \"your_email_here\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_2","title":"Response","text":"name value Content-Type <code>application/json</code> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"successfull\",\n    \"message\": \"OTP has been re-send to your email.\",\n}\n</code></pre></p> <p>Error Response  1. 429 Too Many Requests          This error is caused by sending a re-send request too early. There are only one possible error type that is, <code>otp_resend_interval_not_reached</code> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"otp_resend_interval_not_reached\",\n    \"description\": \"Re send mail has already been sent\"\n}\n</code></pre></p>"},{"location":"v1/endpoint/#4-login","title":"4. Login","text":"<p>To log in user to the server and gain access to all service, sent a POST request to endpoint below:</p> <pre><code>POST /v1/account/login\n</code></pre>"},{"location":"v1/endpoint/#request_3","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type application/json <ul> <li>Body <pre><code>{\n    \"email\": \"your_email_here\",\n    \"password\": \"your_password_here\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_3","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"token\": {\n        \"accesss_token\": \"your_token_here\",\n        \"refresh_token\": \"your_refresh_token_here\",\n    }\n}\n</code></pre></p> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>401 Unauthenticated          There are two error that can caused this status code, that is</li> </ol> error_type description user_marked_inactive the user isn't registered successfully and currently marked as inactive invalid_credentials email or password is invalid <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre>"},{"location":"v1/endpoint/#5-patch-user-info-not-yet-implemented","title":"5. Patch User Info (NOT YET IMPLEMENTED)","text":"<p>Update user info partially, send a PATCH request to endpoint below:</p> <pre><code>PATCH /v1/account/{username}\n</code></pre>"},{"location":"v1/endpoint/#request_4","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> Authorization <code>Bearer your_token_here</code> <ul> <li>Body <pre><code>{\n    \"name\": \"your_new_name_here\" (optional),\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_4","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"Success updating user info\"\n}\n</code></pre></p> </li> <li> <p>Error Response  1. 400 Bad Request  This error can be caused by several reasons. The list of all possible error is listed below:</p> </li> </ul> error_type description header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>403 Forbidden</li> </ol> error_type description Invalid_auth_header The header specified a wrong auth method other than Bearer Token empty_auth_header Auth header is empty invalid_token Token provided is invalid token_expired Token has already expired <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"descriptipn\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found Username not found</li> </ol>"},{"location":"v1/endpoint/#6-link-steam-account","title":"6. Link Steam Account","text":"<p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <p>This endpoint is for storing user steamid into the database. </p>"},{"location":"v1/endpoint/#endpoint","title":"Endpoint","text":"<pre><code>POST /v1/account/{username}/steam\n</code></pre>"},{"location":"v1/endpoint/#request_5","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"steamid\": \"steam id\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_5","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"account is linked successfully\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error is caused by username in the path parameter doesn't exist <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"username_not_found\",\n    \"description\": \"username not found\",\n}\n</code></pre></li> </ol>"},{"location":"v1/endpoint/#7-rollback-steam-link","title":"7. Rollback Steam Link","text":"<p>This endpoint is for rollback steam linking </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_1","title":"Endpoint","text":"<pre><code>DELETE /v1/account/{username}/steam\n</code></pre>"},{"location":"v1/endpoint/#response_6","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"account is linked successfully\"\n}\n</code></pre> <p>Error Response  1. 400 Bad Request      This error can be caused by several reasons. The list of all possible error is listed below:</p> error_type description missing_parameters some body parameters is missing header_value_mismatch Content-Type header isn't acceptable <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"your_error_type_here\",\n    \"description\": \"details_regarding_your_error here\",\n}\n</code></pre> <ol> <li>404 Not Found      This error is caused by username in the path parameter doesn't exist</li> </ol> <pre><code>{\n    \"status\": \"error\",\n    \"error_type\": \"username_not_found\",\n    \"description\": \"username not found\",\n}\n</code></pre>"},{"location":"v1/endpoint/#8-get-steam-id","title":"8. Get Steam ID","text":"<p>This endpoint is for get the steam id of an account</p>"},{"location":"v1/endpoint/#endpoint_2","title":"Endpoint","text":"<pre><code>GET /v1/account/{username}/steamid\n</code></pre>"},{"location":"v1/endpoint/#response_7","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"steamid\": \"your steam id\"\n}\n</code></pre></p> <p>Error Response  1. 400 Bad Request  There are only one error response on this endpoint, and that is <code>steam_not_linked</code>. It was caused by trying to get steam id when the account hasn't been linked to a valid steam account. </p> <pre><code>{\n    \"status\": \"fail\",\n    \"error_type\": \"steam_not_linked\",\n    \"description\": \"account hasn't been linked to steam yet\"\n}\n</code></pre>"},{"location":"v1/endpoint/#9-logout","title":"9. Logout","text":"<p>This endpoint to logout your account from the service. After logout all of your token (access token and refresh token) will be revoked </p>"},{"location":"v1/endpoint/#endpoint_3","title":"Endpoint","text":"<pre><code>POST /v1/account/logout\n</code></pre>"},{"location":"v1/endpoint/#request_6","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> Authorization <code>Bearer your_token_here</code> <ul> <li>Body <pre><code>{\n    'username': 'fried_rice'\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#auth","title":"Auth","text":"<p>Properties</p> name description username valid account username for token claims email valid account email for token claims roles the roles of the user that issued the token"},{"location":"v1/endpoint/#token-type","title":"Token Type","text":"<ol> <li>Auth Token      Give access to verified user to endpoint that can be accessed with their credentials. This token is set to expired 15 minutes after the token has been issued. </li> <li>Refresh Token       Token for refresh auth token. This token will expired 1 day after the token has been issued. </li> </ol> <p>Info</p> <p>When auth token is refreshed, the refresh token also refreshed. So refresh token will expired after 1 day of inactivity. </p>"},{"location":"v1/endpoint/#1-issue-token","title":"1. Issue Token","text":"<p>To issue an access token for user, send a POST request to endpoint. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <pre><code>POST /v1/auth/token\n</code></pre>"},{"location":"v1/endpoint/#request_7","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p> <ul> <li>Body <pre><code>{\n    \"username\": \"issuer username\",\n    \"email\": \"issuer email\",\n    \"roles\": \"user role (user/admin)\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_8","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"access_token\": \"token\",\n    \"refresh_token\": \"refresh\",\n}\n</code></pre></p> </li> <li> <p>Failed Response 1. 400 Bad Request Below is several error that caused this error code:</p> </li> </ul> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header <ol> <li>403 Unauthorized  Only error for this code is <code>access_denied</code>. This happens when the client doesn't provide a valid certificate. </li> </ol>"},{"location":"v1/endpoint/#2-public-refresh-token","title":"2. (PUBLIC) Refresh Token","text":"<p>To refresh auth token, send a POST request to this endpoint</p> <pre><code>POST /v1/auth/token/refresh\n</code></pre>"},{"location":"v1/endpoint/#request_8","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> * Body <pre><code>{\n    \"access_token\": \"your_expired_token_here\",\n    \"refresh_token\": \"your_valid_refresh_token_here\",\n}\n</code></pre>"},{"location":"v1/endpoint/#response_9","title":"Response","text":"<ul> <li> <p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\", \n    \"access_token\": \"your_new_access_token\",\n    \"refresh_token\": \"your_new_refresh_token\".\n}\n</code></pre></p> </li> <li> <p>Failed Response 1. 403 Unauthorized  This status is returned because of the issued token doesn't meet required conditions. Here are the error that can arise from this error code:</p> </li> </ul> error_type description refresh_denied cannot refresh access token because the previous one still active token_invalid access token invalid or refresh token invalid or your access token is revoked token_expired refresh token is expired claim_mismatch your access token and refresh token has different credentials <p>Info</p> <p>Revoked access token cannot be refreshed. </p> <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#3-verify-credentials","title":"3. Verify Credentials","text":"<p>This endpoint is for verifying your credentials. Send a POST request to this endpoint. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <pre><code>POST /v1/auth/verify \n</code></pre>"},{"location":"v1/endpoint/#request_9","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p>"},{"location":"v1/endpoint/#request_10","title":"Request","text":"<ul> <li>Body <pre><code>{\n    \"token\": \"your_token_here\",\n    \"endpoint\": \"the_endpoint_the_user_try_to_access\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_10","title":"Response","text":"<ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description token_invalid either the access token or refresh token is invalid token_expired refresh token is expired access_denied you don't have access to the endpoint <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#4-revoked-access-token","title":"4. Revoked Access Token","text":"<p>To revoke an active token, send a POST request to this endpoint</p> <pre><code>POST /v1/auth/token/revoke\n</code></pre> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p> <p>Info</p> <p>Appending certificate onto the header is optional, the server accept client TLS Certificate if given. </p>"},{"location":"v1/endpoint/#request_11","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body</li> </ul> <pre><code>{\n    \"access_token\": \"access_token_that_need_to_be_revoked\"\n}\n</code></pre>"},{"location":"v1/endpoint/#response_11","title":"Response","text":"<ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description access_denied you don't have access to the endpoint"},{"location":"v1/endpoint/#games","title":"Games","text":"<p>Properties</p> name type description game_id <code>int</code> Game id assigned by steam name <code>string</code> Game display name display_picture <code>string</code> the url where the game display picture is stored icon_url <code>string</code> the url where the game icon is stored <p>Storage Location Schema</p> <pre><code>{\n    \"protocol\": \"nas\",\n    \"server\": {\n        \"ip\": \"192.168.0.1\",\n        \"port\": \"optional\"\n    },\n    \"path\": \"some/path/to/the/location\"\n}\n</code></pre> <p>Header</p> name description Content-Type The content type of the request. Only accepted <code>application/json</code>"},{"location":"v1/endpoint/#1-sync-games-to-user-account","title":"1. Sync Games to User Account","text":"<p>This is endpoint to sync user owned games in steam and add supported games to user games collections. </p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_4","title":"Endpoint","text":"<pre><code>POST /v1/games/{username}/sync\n</code></pre>"},{"location":"v1/endpoint/#request_12","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body</li> </ul> <pre><code>{\n    \"games\": [\n        {\n            \"name\": \"example game\",\n            \"icon_url\": \"http://media.steampowered.com/steamcommunity/public/images/apps/{appid}/{hash}.jpg\"\n            \"_id\": \"12312312321\",\n        }, \n        {\n            ...\n        }\n    ]\n}\n</code></pre>"},{"location":"v1/endpoint/#2-get-user-games-collections","title":"2. Get User Games Collections","text":"<p>This endpoint is for getting user collections of games. </p>"},{"location":"v1/endpoint/#endpoint_5","title":"Endpoint","text":"<pre><code>GET /v1/games/{username}/collections\n</code></pre>"},{"location":"v1/endpoint/#query-parameters","title":"Query Parameters","text":"parameter description cursor this parameter is used to get entry greater than this value. Default is <code>0</code> limit this parameter is used to specify how many values will be returned after the cursor. Default is <code>10</code>. The maximum value is <code>100</code>"},{"location":"v1/endpoint/#pagination","title":"Pagination","text":"<p>To get the first page, send request to this endpoint without specifying the offset or set offset to <code>0</code>.  Then to access the next page, use the offset value returned at the response. </p>"},{"location":"v1/endpoint/#request_13","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code>"},{"location":"v1/endpoint/#response_12","title":"Response","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> <ul> <li>Body</li> </ul> <p>Successful Response (200 OK) <pre><code>{\n    \"games\": [\n        {\n            \"game_id\": \"some_id_here\",\n            \"name\": \"some_name_here\",\n            \"game_icon\": \"http://path/to/icon.jpg\",\n            \"display_picture\": \"http://path/to/display.jpg\"\n        }\n    ],\n\n    \"offset\": \"12321\"\n}\n</code></pre></p> <p>Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route"},{"location":"v1/endpoint/#3-play-games","title":"3. Play Games","text":"<p>This endpoint is for creating a new session (VM) populated with requested games. </p>"},{"location":"v1/endpoint/#endpoint_6","title":"Endpoint","text":"<pre><code>POST /v1/games/play\n</code></pre>"},{"location":"v1/endpoint/#request_14","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code> Content-Type <code>application/json</code> <ul> <li>Body <pre><code>{\n    \"game_id\": \"122131\",\n    \"username\": \"username\"\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_13","title":"Response","text":"<p>Successful Response <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"session request has been successfully created\",\n    \"session_id\": \"your_session_id\"\n}\n</code></pre></p> <p>Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <p>Error Response <pre><code>{\n    \"status\": \"fail\",\n    \"error_type\": \"steam_not_linked\",\n    \"description\": \"account hasn't been linked to steam yet\"\n}\n</code></pre></p> <ol> <li>403 Unauthorized  This status is returned because of the token doesn't meet required conditions. Here are the error that can arise from this error code:</li> </ol> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <ol> <li>400 Bad Request  Below is several error that caused this error code:</li> </ol> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header <ol> <li>404 Not Found  This is caused because of the game id not found on the user collections. </li> </ol>"},{"location":"v1/endpoint/#session","title":"Session","text":"<p>This is a service that handle as middleware between client and session manager. </p>"},{"location":"v1/endpoint/#1-create-new-session","title":"1. Create New Session","text":"<p>Create new session request to session manager</p> <p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_7","title":"Endpoint","text":"<pre><code>POST /v1/session/create\n</code></pre>"},{"location":"v1/endpoint/#request_15","title":"Request","text":"<ul> <li>Header</li> </ul> name value Content-Type <code>application/json</code> X-Client-Cert <code>base64 encoded certificate</code> <ul> <li>Body <pre><code>{\n    \"username\": \"username\"\n    \"session_metadata\": {\n        \"game_id\": 14121,\n        \"game_location\": {\n            \"protocol\": \"nas\",\n            \"server\": {\n                \"ip\": \"192.168.101.1\",\n            }\n            \"path\": \"/location/to/ganme\"\n        }\n    }\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_14","title":"Response","text":"<p>Successful Response (200 OK)</p> <pre><code>{\n    \"status\": \"success\",\n    \"session_id\": \"uuid-v7-id\"\n}\n</code></pre>"},{"location":"v1/endpoint/#2-get-session-status","title":"2. Get Session Status","text":"<p>View the status of the request</p>"},{"location":"v1/endpoint/#request-status","title":"Request Status","text":"<p>1. Provisioning  This is the step where the session service successfully create a VM creation request to session manager. </p> <p>2.WaitingForConnection  This is the step where the VM requested has changed it's status to Running and waiting for the client to connect to the VM Virtual LAN. (via ZeroTier)</p> <p>3. Running  This is the step where configuration has set up successfully and client can used the VM. </p> <p>4. Failed  Some step has failed and the VM creation is cancelled. </p>"},{"location":"v1/endpoint/#endpoint_8","title":"Endpoint","text":"<pre><code>GET /v1/session/{session_id}/status\n</code></pre>"},{"location":"v1/endpoint/#request_16","title":"Request","text":"<ul> <li>Header*</li> </ul> name value Authorization <code>Bearer Token</code> Content-Type <code>application/json</code>"},{"location":"v1/endpoint/#response_15","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"Provisioning\" \n}\n</code></pre> Error Response  1. 403 Unauthorized  This status is returned because of the token doesn't meet required conditions or you are trying to access route without the correct permission. Here are the error that can arise from this error code:</p> error_type description token_invalid access token is invalid token_expired refresh token is expired access_denied you don't have access to this route <ol> <li>404 Not Found This status returned when you are trying to get status of session_id that isn't exist. </li> </ol>"},{"location":"v1/endpoint/#3-start-connection-establishment","title":"3. Start Connection Establishment","text":"<p>Important</p> <p>This endpoint only available for INTERNAL USE. The service will check the client certificate before proceeding the request. If the certificate  NOT ISSUED by our CERTIFICATE MANAGER, the request will be DECLINED.  </p>"},{"location":"v1/endpoint/#endpoint_9","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/connection/start\n</code></pre>"},{"location":"v1/endpoint/#request_17","title":"Request","text":"field_name type description webhook <code>string</code> server address that will be called when data is ready network_id <code>string</code> zerotier network id <p>Important</p> <p>Make sure your endpoint has /pin route that accept JSON Content-Type for verifying user pin. The API will accept 200 as a valid response else it's considered as failure. The payload schema is the same as the Pair endpoint route below. </p> <ul> <li>Body <pre><code>{\n    \"webhook\": {\n        \"host\": \"192.168.0.1\",\n        \"port\": \"3000\",\n    },\n    \"network_id\": \"network_id\",\n}\n</code></pre></li> </ul>"},{"location":"v1/endpoint/#response_16","title":"Response","text":"<p>Successful Response (200 OK) <pre><code>{\n    \"status\": \"success\",\n    \"message\": \"instance has been successfully attached to the session\"\n}\n</code></pre></p> <p>Error Response 1. 400 Bad Request  Below is several error that caused this error code:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header"},{"location":"v1/endpoint/#3-pair","title":"3. Pair","text":"<p>Start pairing sunshine with moonlight. When success, the status of the request will changed to <code>Running</code>. This endpoint need to be called from the client. </p>"},{"location":"v1/endpoint/#endpoint_10","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/pair\n</code></pre>"},{"location":"v1/endpoint/#request_18","title":"Request","text":"<pre><code>{\n    \"pin\": \"your_pin_here\"\n}\n</code></pre> <p>Successful Reponse (200 OK) <pre><code>{\n    \"status\": \"success\".\n    \"message\": \"client has been paired successfully to the session instance\"\n}\n</code></pre></p> <p>Error Response 1. 400 Bad Request  Below is several error that caused this error code:</p> error_type description missing_parameter There are a missing parameters in the request provided header_value_mismatch using non-supported content-type header invalid_pin pin provided is incorrect"},{"location":"v1/endpoint/#4-terminate-session","title":"4. Terminate Session","text":"<p>Terminate current session</p>"},{"location":"v1/endpoint/#endpoint_11","title":"Endpoint","text":"<pre><code>POST /v1/session/{session_id}/terminate\n</code></pre>"},{"location":"v1/installation/","title":"Installation","text":"<p>You could easily run this project on local environment by using docker-compose. Below is the step to deploy the application:</p> <p>If you on Linux, you could deploy the application by running the <code>init</code> bash scripts on deployment folder <pre><code>$ ./deployments/init.sh\n</code></pre></p> <p>Else, you could manually run all service needed for deployment </p> <ol> <li> <p>Deploy Certificate Manager Service <pre><code>$ cd cert-manager &amp;&amp; docker-compose up\n</code></pre></p> </li> <li> <p>After cert-manager is up, run the API service <pre><code>$ cd ../deployments &amp;&amp; docker-compose-up\n</code></pre></p> </li> <li> <p>After all service is up and running, you could view the API documentation on <code>localhost:9000</code></p> </li> <li> <p>Postman collection for testing are available on TBA</p> </li> </ol>"},{"location":"v1/milestones/","title":"Milestones","text":""},{"location":"v1/milestones/#fully-functional-user-service-deadline-not-set","title":"Fully functional user service (Deadline: Not Set)","text":"<ul> <li> database design</li> <li> functional register and login</li> <li> dependable session management</li> <li> need otp support?</li> <li> steam links using openID </li> </ul>"},{"location":"v1/milestones/#fully-functional-games-service-deadline-not-set","title":"Fully functional games service (Deadline: Not Set)","text":"<ul> <li> database design </li> <li> stored list of user steam games that are supported by the service</li> <li> pagination</li> <li> search funtionality (w elasticsearch) (?)</li> </ul>"},{"location":"v1/milestones/#middleware","title":"Middleware","text":"<ul> <li> send otp from server to client email</li> <li> </li> <li> dependable middleware to link steam </li> </ul>"},{"location":"v1/milestones/#fully-functional-mail-middleware","title":"Fully functional mail middleware","text":""},{"location":"v1/milestones/#fully-functional-steam-openid-auth-middleware-for-steam-link","title":"Fully functional steam openid auth middleware for steam link","text":""},{"location":"v1/milestones/#testing","title":"Testing","text":"<ul> <li> Integration testing</li> </ul>"},{"location":"v1/milestones/#up-to-date-documentation-deadline-not-set","title":"Up to date Documentation (Deadline: Not Set)","text":"<ul> <li> <p> endpoint for all service is well documented (Deadline: Not Set)</p> <ul> <li> user service endpoint</li> <li> games service endpoint</li> <li> session service endpoint</li> <li> auth service endpoint</li> <li> middleware service endpoint</li> </ul> </li> <li> <p> architecture is well documented</p> <ul> <li> complete diagram of the backend design </li> <li> all service database design</li> <li> codebase documentation</li> </ul> </li> </ul>"}]}